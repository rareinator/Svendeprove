kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
     name: azure-disk-mongo
provisioner: kubernetes.io/azure-disk
parameters:
  storageaccounttype: Standard_LRS
  kind: Managed
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mongo-data
  annotations:
    volume.beta.kubernetes.io/storage-class: azure-disk-mongo
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-deployment
spec:
  replicas: 1
  selector:
     matchLabels:
       app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      terminationGracePeriodSeconds: 30
      hostname: mongoinst
      securityContext:
        fsGroup: 10001
      containers:
      - name: mongo
        image: mongo
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: "root"
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo
              key: MONGO_PASSWORD 
        volumeMounts:
        - name: mongodb
          mountPath: /data/db
      volumes:
      - name: mongodb
        persistentVolumeClaim:
          claimName: mongo-data
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-deployment
spec:
  selector:
    app: mongo
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
  type: LoadBalancer