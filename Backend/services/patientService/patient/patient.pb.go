// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.4
// source: patient.proto

package patient

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PEmpty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PEmpty) Reset() {
	*x = PEmpty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_patient_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PEmpty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PEmpty) ProtoMessage() {}

func (x *PEmpty) ProtoReflect() protoreflect.Message {
	mi := &file_patient_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PEmpty.ProtoReflect.Descriptor instead.
func (*PEmpty) Descriptor() ([]byte, []int) {
	return file_patient_proto_rawDescGZIP(), []int{0}
}

type PHealth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *PHealth) Reset() {
	*x = PHealth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_patient_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PHealth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PHealth) ProtoMessage() {}

func (x *PHealth) ProtoReflect() protoreflect.Message {
	mi := &file_patient_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PHealth.ProtoReflect.Descriptor instead.
func (*PHealth) Descriptor() ([]byte, []int) {
	return file_patient_proto_rawDescGZIP(), []int{1}
}

func (x *PHealth) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
}

func (x *PStatus) Reset() {
	*x = PStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_patient_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PStatus) ProtoMessage() {}

func (x *PStatus) ProtoReflect() protoreflect.Message {
	mi := &file_patient_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PStatus.ProtoReflect.Descriptor instead.
func (*PStatus) Descriptor() ([]byte, []int) {
	return file_patient_proto_rawDescGZIP(), []int{2}
}

func (x *PStatus) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type Patient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Address    string `protobuf:"bytes,2,opt,name=Address,proto3" json:"Address,omitempty"`
	City       string `protobuf:"bytes,3,opt,name=City,proto3" json:"City,omitempty"`
	PostalCode string `protobuf:"bytes,4,opt,name=PostalCode,proto3" json:"PostalCode,omitempty"`
	Country    string `protobuf:"bytes,5,opt,name=Country,proto3" json:"Country,omitempty"`
	SocialIdNr string `protobuf:"bytes,6,opt,name=SocialIdNr,proto3" json:"SocialIdNr,omitempty"`
	Username   string `protobuf:"bytes,7,opt,name=Username,proto3" json:"Username,omitempty"`
}

func (x *Patient) Reset() {
	*x = Patient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_patient_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Patient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Patient) ProtoMessage() {}

func (x *Patient) ProtoReflect() protoreflect.Message {
	mi := &file_patient_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Patient.ProtoReflect.Descriptor instead.
func (*Patient) Descriptor() ([]byte, []int) {
	return file_patient_proto_rawDescGZIP(), []int{3}
}

func (x *Patient) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Patient) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Patient) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Patient) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *Patient) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Patient) GetSocialIdNr() string {
	if x != nil {
		return x.SocialIdNr
	}
	return ""
}

func (x *Patient) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type PRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=Username,proto3" json:"Username,omitempty"`
	Id       int32  `protobuf:"varint,2,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *PRequest) Reset() {
	*x = PRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_patient_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PRequest) ProtoMessage() {}

func (x *PRequest) ProtoReflect() protoreflect.Message {
	mi := &file_patient_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PRequest.ProtoReflect.Descriptor instead.
func (*PRequest) Descriptor() ([]byte, []int) {
	return file_patient_proto_rawDescGZIP(), []int{4}
}

func (x *PRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *PRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PatientDiagnose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PatientDiagnoseId int32  `protobuf:"varint,1,opt,name=PatientDiagnoseId,proto3" json:"PatientDiagnoseId,omitempty"`
	Patient           string `protobuf:"bytes,2,opt,name=Patient,proto3" json:"Patient,omitempty"`
	DiagnoseId        int32  `protobuf:"varint,3,opt,name=DiagnoseId,proto3" json:"DiagnoseId,omitempty"`
	CreationTime      string `protobuf:"bytes,4,opt,name=CreationTime,proto3" json:"CreationTime,omitempty"`
}

func (x *PatientDiagnose) Reset() {
	*x = PatientDiagnose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_patient_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatientDiagnose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatientDiagnose) ProtoMessage() {}

func (x *PatientDiagnose) ProtoReflect() protoreflect.Message {
	mi := &file_patient_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatientDiagnose.ProtoReflect.Descriptor instead.
func (*PatientDiagnose) Descriptor() ([]byte, []int) {
	return file_patient_proto_rawDescGZIP(), []int{5}
}

func (x *PatientDiagnose) GetPatientDiagnoseId() int32 {
	if x != nil {
		return x.PatientDiagnoseId
	}
	return 0
}

func (x *PatientDiagnose) GetPatient() string {
	if x != nil {
		return x.Patient
	}
	return ""
}

func (x *PatientDiagnose) GetDiagnoseId() int32 {
	if x != nil {
		return x.DiagnoseId
	}
	return 0
}

func (x *PatientDiagnose) GetCreationTime() string {
	if x != nil {
		return x.CreationTime
	}
	return ""
}

type PatientDiagnoses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PatientDiagnoses []*PatientDiagnose `protobuf:"bytes,1,rep,name=PatientDiagnoses,proto3" json:"PatientDiagnoses,omitempty"`
}

func (x *PatientDiagnoses) Reset() {
	*x = PatientDiagnoses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_patient_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatientDiagnoses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatientDiagnoses) ProtoMessage() {}

func (x *PatientDiagnoses) ProtoReflect() protoreflect.Message {
	mi := &file_patient_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatientDiagnoses.ProtoReflect.Descriptor instead.
func (*PatientDiagnoses) Descriptor() ([]byte, []int) {
	return file_patient_proto_rawDescGZIP(), []int{6}
}

func (x *PatientDiagnoses) GetPatientDiagnoses() []*PatientDiagnose {
	if x != nil {
		return x.PatientDiagnoses
	}
	return nil
}

type Symptom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SymptomId   int32  `protobuf:"varint,1,opt,name=SymptomId,proto3" json:"SymptomId,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *Symptom) Reset() {
	*x = Symptom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_patient_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Symptom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Symptom) ProtoMessage() {}

func (x *Symptom) ProtoReflect() protoreflect.Message {
	mi := &file_patient_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Symptom.ProtoReflect.Descriptor instead.
func (*Symptom) Descriptor() ([]byte, []int) {
	return file_patient_proto_rawDescGZIP(), []int{7}
}

func (x *Symptom) GetSymptomId() int32 {
	if x != nil {
		return x.SymptomId
	}
	return 0
}

func (x *Symptom) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Symptoms struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symptoms []*Symptom `protobuf:"bytes,1,rep,name=Symptoms,proto3" json:"Symptoms,omitempty"`
}

func (x *Symptoms) Reset() {
	*x = Symptoms{}
	if protoimpl.UnsafeEnabled {
		mi := &file_patient_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Symptoms) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Symptoms) ProtoMessage() {}

func (x *Symptoms) ProtoReflect() protoreflect.Message {
	mi := &file_patient_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Symptoms.ProtoReflect.Descriptor instead.
func (*Symptoms) Descriptor() ([]byte, []int) {
	return file_patient_proto_rawDescGZIP(), []int{8}
}

func (x *Symptoms) GetSymptoms() []*Symptom {
	if x != nil {
		return x.Symptoms
	}
	return nil
}

type Diagnose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiagnoseId  int32  `protobuf:"varint,1,opt,name=DiagnoseId,proto3" json:"DiagnoseId,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *Diagnose) Reset() {
	*x = Diagnose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_patient_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Diagnose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Diagnose) ProtoMessage() {}

func (x *Diagnose) ProtoReflect() protoreflect.Message {
	mi := &file_patient_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Diagnose.ProtoReflect.Descriptor instead.
func (*Diagnose) Descriptor() ([]byte, []int) {
	return file_patient_proto_rawDescGZIP(), []int{9}
}

func (x *Diagnose) GetDiagnoseId() int32 {
	if x != nil {
		return x.DiagnoseId
	}
	return 0
}

func (x *Diagnose) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Diagnoses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diagnoses []*Diagnose `protobuf:"bytes,1,rep,name=Diagnoses,proto3" json:"Diagnoses,omitempty"`
}

func (x *Diagnoses) Reset() {
	*x = Diagnoses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_patient_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Diagnoses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Diagnoses) ProtoMessage() {}

func (x *Diagnoses) ProtoReflect() protoreflect.Message {
	mi := &file_patient_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Diagnoses.ProtoReflect.Descriptor instead.
func (*Diagnoses) Descriptor() ([]byte, []int) {
	return file_patient_proto_rawDescGZIP(), []int{10}
}

func (x *Diagnoses) GetDiagnoses() []*Diagnose {
	if x != nil {
		return x.Diagnoses
	}
	return nil
}

type Patients struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Patients []*Patient `protobuf:"bytes,1,rep,name=Patients,proto3" json:"Patients,omitempty"`
}

func (x *Patients) Reset() {
	*x = Patients{}
	if protoimpl.UnsafeEnabled {
		mi := &file_patient_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Patients) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Patients) ProtoMessage() {}

func (x *Patients) ProtoReflect() protoreflect.Message {
	mi := &file_patient_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Patients.ProtoReflect.Descriptor instead.
func (*Patients) Descriptor() ([]byte, []int) {
	return file_patient_proto_rawDescGZIP(), []int{11}
}

func (x *Patients) GetPatients() []*Patient {
	if x != nil {
		return x.Patients
	}
	return nil
}

type DiagnoseSymptom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SymptomId         int32  `protobuf:"varint,1,opt,name=SymptomId,proto3" json:"SymptomId,omitempty"`
	PatientDiagnoseId int32  `protobuf:"varint,2,opt,name=PatientDiagnoseId,proto3" json:"PatientDiagnoseId,omitempty"`
	Description       string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *DiagnoseSymptom) Reset() {
	*x = DiagnoseSymptom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_patient_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiagnoseSymptom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiagnoseSymptom) ProtoMessage() {}

func (x *DiagnoseSymptom) ProtoReflect() protoreflect.Message {
	mi := &file_patient_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiagnoseSymptom.ProtoReflect.Descriptor instead.
func (*DiagnoseSymptom) Descriptor() ([]byte, []int) {
	return file_patient_proto_rawDescGZIP(), []int{12}
}

func (x *DiagnoseSymptom) GetSymptomId() int32 {
	if x != nil {
		return x.SymptomId
	}
	return 0
}

func (x *DiagnoseSymptom) GetPatientDiagnoseId() int32 {
	if x != nil {
		return x.PatientDiagnoseId
	}
	return 0
}

func (x *DiagnoseSymptom) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type DiagnoseSymptoms struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiagnoseSymptoms []*DiagnoseSymptom `protobuf:"bytes,1,rep,name=DiagnoseSymptoms,proto3" json:"DiagnoseSymptoms,omitempty"`
}

func (x *DiagnoseSymptoms) Reset() {
	*x = DiagnoseSymptoms{}
	if protoimpl.UnsafeEnabled {
		mi := &file_patient_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiagnoseSymptoms) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiagnoseSymptoms) ProtoMessage() {}

func (x *DiagnoseSymptoms) ProtoReflect() protoreflect.Message {
	mi := &file_patient_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiagnoseSymptoms.ProtoReflect.Descriptor instead.
func (*DiagnoseSymptoms) Descriptor() ([]byte, []int) {
	return file_patient_proto_rawDescGZIP(), []int{13}
}

func (x *DiagnoseSymptoms) GetDiagnoseSymptoms() []*DiagnoseSymptom {
	if x != nil {
		return x.DiagnoseSymptoms
	}
	return nil
}

type DiagnoseSymptomUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Old *DiagnoseSymptom `protobuf:"bytes,1,opt,name=Old,proto3" json:"Old,omitempty"`
	New *DiagnoseSymptom `protobuf:"bytes,2,opt,name=New,proto3" json:"New,omitempty"`
}

func (x *DiagnoseSymptomUpdateRequest) Reset() {
	*x = DiagnoseSymptomUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_patient_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiagnoseSymptomUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiagnoseSymptomUpdateRequest) ProtoMessage() {}

func (x *DiagnoseSymptomUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_patient_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiagnoseSymptomUpdateRequest.ProtoReflect.Descriptor instead.
func (*DiagnoseSymptomUpdateRequest) Descriptor() ([]byte, []int) {
	return file_patient_proto_rawDescGZIP(), []int{14}
}

func (x *DiagnoseSymptomUpdateRequest) GetOld() *DiagnoseSymptom {
	if x != nil {
		return x.Old
	}
	return nil
}

func (x *DiagnoseSymptomUpdateRequest) GetNew() *DiagnoseSymptom {
	if x != nil {
		return x.New
	}
	return nil
}

var File_patient_proto protoreflect.FileDescriptor

var file_patient_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x08, 0x0a, 0x06, 0x50, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x23, 0x0a, 0x07, 0x50, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x23,
	0x0a, 0x07, 0x50, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x22, 0xc1, 0x01, 0x0a, 0x07, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x43, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x69, 0x74,
	0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x53,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x4e, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x4e, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x55,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x36, 0x0a, 0x08, 0x50, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x22,
	0x9d, 0x01, 0x0a, 0x0f, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x61, 0x67, 0x6e,
	0x6f, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x69,
	0x61, 0x67, 0x6e, 0x6f, 0x73, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11,
	0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x65, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x44,
	0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x50, 0x0a, 0x10, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f,
	0x73, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x10, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x69,
	0x61, 0x67, 0x6e, 0x6f, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x65, 0x52,
	0x10, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x65,
	0x73, 0x22, 0x49, 0x0a, 0x07, 0x53, 0x79, 0x6d, 0x70, 0x74, 0x6f, 0x6d, 0x12, 0x1c, 0x0a, 0x09,
	0x53, 0x79, 0x6d, 0x70, 0x74, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x53, 0x79, 0x6d, 0x70, 0x74, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x30, 0x0a, 0x08,
	0x53, 0x79, 0x6d, 0x70, 0x74, 0x6f, 0x6d, 0x73, 0x12, 0x24, 0x0a, 0x08, 0x53, 0x79, 0x6d, 0x70,
	0x74, 0x6f, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x53, 0x79, 0x6d,
	0x70, 0x74, 0x6f, 0x6d, 0x52, 0x08, 0x53, 0x79, 0x6d, 0x70, 0x74, 0x6f, 0x6d, 0x73, 0x22, 0x4c,
	0x0a, 0x08, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x69,
	0x61, 0x67, 0x6e, 0x6f, 0x73, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x34, 0x0a, 0x09,
	0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x09, 0x44, 0x69, 0x61,
	0x67, 0x6e, 0x6f, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x44,
	0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x65, 0x52, 0x09, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73,
	0x65, 0x73, 0x22, 0x30, 0x0a, 0x08, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x24,
	0x0a, 0x08, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x50, 0x61, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x22, 0x7f, 0x0a, 0x0f, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x65,
	0x53, 0x79, 0x6d, 0x70, 0x74, 0x6f, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x79, 0x6d, 0x70, 0x74,
	0x6f, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x53, 0x79, 0x6d, 0x70,
	0x74, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74,
	0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x11, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73,
	0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x50, 0x0a, 0x10, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73,
	0x65, 0x53, 0x79, 0x6d, 0x70, 0x74, 0x6f, 0x6d, 0x73, 0x12, 0x3c, 0x0a, 0x10, 0x44, 0x69, 0x61,
	0x67, 0x6e, 0x6f, 0x73, 0x65, 0x53, 0x79, 0x6d, 0x70, 0x74, 0x6f, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x65, 0x53, 0x79,
	0x6d, 0x70, 0x74, 0x6f, 0x6d, 0x52, 0x10, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x65, 0x53,
	0x79, 0x6d, 0x70, 0x74, 0x6f, 0x6d, 0x73, 0x22, 0x66, 0x0a, 0x1c, 0x44, 0x69, 0x61, 0x67, 0x6e,
	0x6f, 0x73, 0x65, 0x53, 0x79, 0x6d, 0x70, 0x74, 0x6f, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x03, 0x4f, 0x6c, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x65, 0x53,
	0x79, 0x6d, 0x70, 0x74, 0x6f, 0x6d, 0x52, 0x03, 0x4f, 0x6c, 0x64, 0x12, 0x22, 0x0a, 0x03, 0x4e,
	0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e,
	0x6f, 0x73, 0x65, 0x53, 0x79, 0x6d, 0x70, 0x74, 0x6f, 0x6d, 0x52, 0x03, 0x4e, 0x65, 0x77, 0x32,
	0x9d, 0x07, 0x0a, 0x0e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12,
	0x07, 0x2e, 0x50, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x08, 0x2e, 0x50, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x22, 0x00, 0x12, 0x25, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x74, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x08, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x1a,
	0x08, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x23, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x07, 0x2e, 0x50, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x09, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x00,
	0x12, 0x23, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x09,
	0x2e, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x08, 0x2e, 0x50, 0x61, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x25, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x08, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74,
	0x1a, 0x08, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x26, 0x0a, 0x0d,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x09, 0x2e,
	0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x08, 0x2e, 0x50, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x00, 0x12, 0x25, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x67, 0x6e,
	0x6f, 0x73, 0x65, 0x12, 0x09, 0x2e, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09,
	0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x65, 0x22, 0x00, 0x12, 0x25, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x65, 0x73, 0x12, 0x07, 0x2e, 0x50, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0a, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x65, 0x73,
	0x22, 0x00, 0x12, 0x23, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6d, 0x70, 0x74, 0x6f, 0x6d,
	0x73, 0x12, 0x07, 0x2e, 0x50, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x09, 0x2e, 0x53, 0x79, 0x6d,
	0x70, 0x74, 0x6f, 0x6d, 0x73, 0x22, 0x00, 0x12, 0x23, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x79,
	0x6d, 0x70, 0x74, 0x6f, 0x6d, 0x12, 0x09, 0x2e, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x08, 0x2e, 0x53, 0x79, 0x6d, 0x70, 0x74, 0x6f, 0x6d, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x15,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x61,
	0x67, 0x6e, 0x6f, 0x73, 0x65, 0x12, 0x10, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x44,
	0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x65, 0x1a, 0x10, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x65, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73,
	0x65, 0x73, 0x12, 0x09, 0x2e, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e,
	0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x65, 0x73,
	0x22, 0x00, 0x12, 0x33, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74,
	0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x65, 0x12, 0x09, 0x2e, 0x50, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x61,
	0x67, 0x6e, 0x6f, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x65,
	0x12, 0x10, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f,
	0x73, 0x65, 0x1a, 0x10, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x61, 0x67,
	0x6e, 0x6f, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x65, 0x12,
	0x09, 0x2e, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x08, 0x2e, 0x50, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x65, 0x53, 0x79, 0x6d, 0x70, 0x74, 0x6f, 0x6d, 0x12,
	0x10, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x65, 0x53, 0x79, 0x6d, 0x70, 0x74, 0x6f,
	0x6d, 0x1a, 0x10, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x65, 0x53, 0x79, 0x6d, 0x70,
	0x74, 0x6f, 0x6d, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x67,
	0x6e, 0x6f, 0x73, 0x65, 0x53, 0x79, 0x6d, 0x70, 0x74, 0x6f, 0x6d, 0x73, 0x12, 0x09, 0x2e, 0x50,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f,
	0x73, 0x65, 0x53, 0x79, 0x6d, 0x70, 0x74, 0x6f, 0x6d, 0x73, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x15,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x65, 0x53, 0x79,
	0x6d, 0x70, 0x74, 0x6f, 0x6d, 0x12, 0x1d, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x65,
	0x53, 0x79, 0x6d, 0x70, 0x74, 0x6f, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x65, 0x53,
	0x79, 0x6d, 0x70, 0x74, 0x6f, 0x6d, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x65, 0x53, 0x79, 0x6d, 0x70, 0x74, 0x6f,
	0x6d, 0x12, 0x10, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x65, 0x53, 0x79, 0x6d, 0x70,
	0x74, 0x6f, 0x6d, 0x1a, 0x08, 0x2e, 0x50, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x42,
	0x0b, 0x5a, 0x09, 0x2e, 0x3b, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_patient_proto_rawDescOnce sync.Once
	file_patient_proto_rawDescData = file_patient_proto_rawDesc
)

func file_patient_proto_rawDescGZIP() []byte {
	file_patient_proto_rawDescOnce.Do(func() {
		file_patient_proto_rawDescData = protoimpl.X.CompressGZIP(file_patient_proto_rawDescData)
	})
	return file_patient_proto_rawDescData
}

var file_patient_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_patient_proto_goTypes = []interface{}{
	(*PEmpty)(nil),                       // 0: PEmpty
	(*PHealth)(nil),                      // 1: PHealth
	(*PStatus)(nil),                      // 2: PStatus
	(*Patient)(nil),                      // 3: Patient
	(*PRequest)(nil),                     // 4: PRequest
	(*PatientDiagnose)(nil),              // 5: PatientDiagnose
	(*PatientDiagnoses)(nil),             // 6: PatientDiagnoses
	(*Symptom)(nil),                      // 7: Symptom
	(*Symptoms)(nil),                     // 8: Symptoms
	(*Diagnose)(nil),                     // 9: Diagnose
	(*Diagnoses)(nil),                    // 10: Diagnoses
	(*Patients)(nil),                     // 11: Patients
	(*DiagnoseSymptom)(nil),              // 12: DiagnoseSymptom
	(*DiagnoseSymptoms)(nil),             // 13: DiagnoseSymptoms
	(*DiagnoseSymptomUpdateRequest)(nil), // 14: DiagnoseSymptomUpdateRequest
}
var file_patient_proto_depIdxs = []int32{
	5,  // 0: PatientDiagnoses.PatientDiagnoses:type_name -> PatientDiagnose
	7,  // 1: Symptoms.Symptoms:type_name -> Symptom
	9,  // 2: Diagnoses.Diagnoses:type_name -> Diagnose
	3,  // 3: Patients.Patients:type_name -> Patient
	12, // 4: DiagnoseSymptoms.DiagnoseSymptoms:type_name -> DiagnoseSymptom
	12, // 5: DiagnoseSymptomUpdateRequest.Old:type_name -> DiagnoseSymptom
	12, // 6: DiagnoseSymptomUpdateRequest.New:type_name -> DiagnoseSymptom
	0,  // 7: PatientService.GetHealth:input_type -> PEmpty
	3,  // 8: PatientService.CreatePatient:input_type -> Patient
	0,  // 9: PatientService.GetPatients:input_type -> PEmpty
	4,  // 10: PatientService.GetPatient:input_type -> PRequest
	3,  // 11: PatientService.UpdatePatient:input_type -> Patient
	4,  // 12: PatientService.DeletePatient:input_type -> PRequest
	4,  // 13: PatientService.GetDiagnose:input_type -> PRequest
	0,  // 14: PatientService.GetDiagnoses:input_type -> PEmpty
	0,  // 15: PatientService.GetSymptoms:input_type -> PEmpty
	4,  // 16: PatientService.GetSymptom:input_type -> PRequest
	5,  // 17: PatientService.CreatePatientDiagnose:input_type -> PatientDiagnose
	4,  // 18: PatientService.GetPatientDiagnoses:input_type -> PRequest
	4,  // 19: PatientService.GetPatientDiagnose:input_type -> PRequest
	5,  // 20: PatientService.UpdatePatientDiagnose:input_type -> PatientDiagnose
	4,  // 21: PatientService.DeletePatientDiagnose:input_type -> PRequest
	12, // 22: PatientService.CreateDiagnoseSymptom:input_type -> DiagnoseSymptom
	4,  // 23: PatientService.GetDiagnoseSymptoms:input_type -> PRequest
	14, // 24: PatientService.UpdateDiagnoseSymptom:input_type -> DiagnoseSymptomUpdateRequest
	12, // 25: PatientService.DeleteDiagnoseSymptom:input_type -> DiagnoseSymptom
	1,  // 26: PatientService.GetHealth:output_type -> PHealth
	3,  // 27: PatientService.CreatePatient:output_type -> Patient
	11, // 28: PatientService.GetPatients:output_type -> Patients
	3,  // 29: PatientService.GetPatient:output_type -> Patient
	3,  // 30: PatientService.UpdatePatient:output_type -> Patient
	2,  // 31: PatientService.DeletePatient:output_type -> PStatus
	9,  // 32: PatientService.GetDiagnose:output_type -> Diagnose
	10, // 33: PatientService.GetDiagnoses:output_type -> Diagnoses
	8,  // 34: PatientService.GetSymptoms:output_type -> Symptoms
	7,  // 35: PatientService.GetSymptom:output_type -> Symptom
	5,  // 36: PatientService.CreatePatientDiagnose:output_type -> PatientDiagnose
	6,  // 37: PatientService.GetPatientDiagnoses:output_type -> PatientDiagnoses
	5,  // 38: PatientService.GetPatientDiagnose:output_type -> PatientDiagnose
	5,  // 39: PatientService.UpdatePatientDiagnose:output_type -> PatientDiagnose
	2,  // 40: PatientService.DeletePatientDiagnose:output_type -> PStatus
	12, // 41: PatientService.CreateDiagnoseSymptom:output_type -> DiagnoseSymptom
	13, // 42: PatientService.GetDiagnoseSymptoms:output_type -> DiagnoseSymptoms
	12, // 43: PatientService.UpdateDiagnoseSymptom:output_type -> DiagnoseSymptom
	2,  // 44: PatientService.DeleteDiagnoseSymptom:output_type -> PStatus
	26, // [26:45] is the sub-list for method output_type
	7,  // [7:26] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_patient_proto_init() }
func file_patient_proto_init() {
	if File_patient_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_patient_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PEmpty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_patient_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PHealth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_patient_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_patient_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Patient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_patient_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_patient_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatientDiagnose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_patient_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatientDiagnoses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_patient_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Symptom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_patient_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Symptoms); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_patient_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Diagnose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_patient_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Diagnoses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_patient_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Patients); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_patient_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiagnoseSymptom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_patient_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiagnoseSymptoms); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_patient_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiagnoseSymptomUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_patient_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_patient_proto_goTypes,
		DependencyIndexes: file_patient_proto_depIdxs,
		MessageInfos:      file_patient_proto_msgTypes,
	}.Build()
	File_patient_proto = out.File
	file_patient_proto_rawDesc = nil
	file_patient_proto_goTypes = nil
	file_patient_proto_depIdxs = nil
}
