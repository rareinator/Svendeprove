syntax = "proto3";
option go_package = ".;journal";

message JEmpty {

}

message Journal {
  int32 JournalId = 1;
  string CreationTime = 2;
  string Intro = 3;
  int32 PatientId = 4;
  int32 CreatedBy = 5;
}

message JournalRequest {
  int32 JournalId = 1;
}

message PatientRequest {
  int32 PatientId = 1;
}

message Status {
  bool Success = 1;
}

message JHealth {
  string Message = 1;
}

message Journals {
  repeated Journal journals = 1;
}

message JournalDocument {
  int32 DocumentId = 1;
  string Content = 2;
  int32 JournalId = 3;
  int32 CreatedBy = 4;
  string Title = 5;
  string Summary = 6;
  string CreationTime = 7;
  repeated Attachment Attachments = 8;
}

message JournalDocuments {
  repeated JournalDocument JournalDocuments = 1;
}

message JournalDocumentRequest {
  int32 JournalDocumentId = 1;
}

message Attachment {
  int32 AttachmentId = 1;
  string FileName = 2;
  int32 FileStoreId = 3;
  int32 DocumentId = 4;
  int32 FileTypeId = 5;
  optional string FileType = 6;
  optional string Path = 7;
  optional string Content = 8;
}

service JournalService {
  rpc GetJournal(JournalRequest) returns (Journal) {}
  rpc CreateJournal(Journal) returns (Journal) {}
  rpc DeleteJournal(JournalRequest) returns (Status) {}
  rpc GetHealth(JEmpty) returns (JHealth) {}
  rpc UpdateJournal(Journal) returns (Journal) {}
  rpc GetJournalsByPatient(PatientRequest) returns (Journals) {}

  rpc DeleteJournalDocument(JournalDocumentRequest) returns (Status) {}
  rpc UpdateJournalDocument(JournalDocument) returns (JournalDocument) {}
  rpc GetJournalDocumentsByJournal(JournalRequest) returns (JournalDocuments) {}
  rpc GetJournalDocument(JournalDocumentRequest) returns (JournalDocument) {}
  rpc CreateJournalDocument(JournalDocument) returns (JournalDocument) {}

  rpc CreateAttachment(Attachment) returns (Attachment) {}
}