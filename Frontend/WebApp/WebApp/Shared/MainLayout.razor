@inherits LayoutComponentBase
    <div class="page">
        <CascadingValue Value="@user" Name="User">

            @if (MyNavigationManager.Uri != MyNavigationManager.BaseUri)
            {
                <AuthorizeView Roles="Patient">
                    <Authorized>

                        <div class="sidebar">
                            <NavMenu />
                        </div>

                    </Authorized>
                </AuthorizeView>

                <AuthorizeView Roles="Admin">
                    <Authorized>

                        <div class="sidebar">
                            <AdminNavMenu />
                        </div>

                    </Authorized>
                </AuthorizeView>

            }

            <div class="main">
                @if (MyNavigationManager.Uri != MyNavigationManager.BaseUri)
                {
                    <AuthorizeView>
                        <Authorized>

                            <div class="top-row px-4">
                                <h4>Velkommen</h4>
                                <h4 class="ml-md-auto">@user.Username</h4>
                            </div>

                        </Authorized>
                    </AuthorizeView>
                }
                <div class="content px-4">
                    @Body
                </div>
            </div>
        </CascadingValue>
    </div>

    @code{

        [CascadingParameter]
        private Task<AuthenticationState> authenticationStateTask { get; set; }
        public UserModel user = new UserModel();

    }

    @functions{

        protected async override Task OnInitializedAsync()
        {
            //IUserUpdateService.OnUserUpdate += Handle;


            base.OnInitialized();
        }

        protected void Handle(UserModel args)
        {
            //user = args;
            StateHasChanged();
        }

        protected override async Task OnAfterRenderAsync(bool firstRender)
        {
            //Get cookie
            //string cookieJson = await JSRuntime.InvokeAsync<string>("getCookie", "Data");
            //Deserialize json
            //Fill data to user object
            //try
            //{
            //    if (cookieJson != "")
            //    {
            //        user = JsonSerializer.Deserialize<UserModel>(cookieJson);
            //    }
            //}
            //catch (Exception)
            //{
            //
            //    throw;
            //}
            //if (firstRender)
            //{
            //    StateHasChanged();
            //}
        }
    }
