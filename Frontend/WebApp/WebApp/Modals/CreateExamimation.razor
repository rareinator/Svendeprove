<h5>Start</h5>
<div class="form-group">
    <input class="form-control" type="date" @bind="SelectedBooking.BookedTime" />
</div>

<h5>Slut</h5>
<div class="form-group">
    <input class="form-control" type="date" @bind="SelectedBooking.BookedEnd" />
</div>


<h5>Beskrivelse</h5>
<div class="form-group">
    <input class="form-control" type="text" @bind="SelectedBooking.Description" />
</div>

<h5>Hospital</h5>
<div class="form-group">
    
</div>
<br />

<!-- Button to save the user -->
<button class="btn btn-primary" @onclick="Save">
    Gem
</button>&nbsp;

<!-- Only show delete button if not a new record -->
@if (SelectedBooking.BookingId.ToString() != "0")
{
    <!-- Button to delete the Blog -->
    <button class="btn btn-danger" @onclick="Delete">
        Slet
    </button>
}
<br />

@code {
    [CascadingParameter]
    BlazoredModalInstance BlazoredModal { get; set; }

    [CascadingParameter]
    public IModalService Modal { get; set; }


    [Parameter]
    public PatientModel SelectedPatient { get; set; }

    [Parameter]
    public BookingModel SelectedBooking { get; set; }

    private async Task Save()
    {
        await BlazoredModal.CloseAsync(ModalResult.Ok(SelectedBooking));
    }

    private async Task Delete()
    {
        BookingData.DeleteBooking(SelectedBooking.BookingId);
        await BlazoredModal.CloseAsync();
    }
}
